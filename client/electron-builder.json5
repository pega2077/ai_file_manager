// @see - https://www.electron.build/configuration/configuration
{
  "$schema": "https://raw.githubusercontent.com/electron-userland/electron-builder/master/packages/app-builder-lib/scheme.json",
  "appId": "com.pega2077.aifilemanager",
  "asar": true,
  // Unpack native modules and dynamic libraries so Node can dlopen them at runtime
  "asarUnpack": [
    "node_modules/faiss-node/**",
    "**/*.node",
    "**/*.dylib",
    "**/*.so*"
  ],
  "productName": "AiFileManager",
  "directories": {
    "output": "builds/${version}"
  },
  "files": [
    "builds/renderer",
    "builds/electron",
    // Ensure faiss-node runtime files are packaged (left external from Vite bundle)
    {
      "from": "node_modules/faiss-node",
      "to": "node_modules/faiss-node",
      "filter": [
        "**/*"
      ]
    }
  ],
  "extraResources": [
    {
      "from": "app-icon.ico",
      "to": "app-icon.ico"
    },
    {
      "from": "app-icon.png",
      "to": "app-icon.png"
    },
    {
      "from": "app-iconTemplate.png",
      "to": "app-iconTemplate.png"
    },
    {
      // Ensure locales JSON are available at runtime for any non-bundled consumers
      "from": "locales",
      "to": "locales"
    }
    ,
    {
      // Include sharp native binaries if present
      "from": "node_modules/sharp/",
      "to": "resources/sharp",
      "filter": [
        "**/*.node",
        "**/*.dll",
        "**/*.dylib",
        "**/*.so*",
        "**/*.wasm"
      ]
    }
  ],
  "mac": {
    "target": [
      "dmg"
    ],
    "icon": "app-icon.png",
    "artifactName": "${productName}-Mac-${version}-Installer.${ext}"
  },
  "win": {
    "target": [
      {
        "target": "nsis",
        "arch": [
          "x64"
        ]
      }
    ],
    "icon": "app-icon.ico",
    "artifactName": "${productName}-Windows-${version}-Setup.${ext}"
  },
  "nsis": {
    "oneClick": false,
    "perMachine": false,
    "allowToChangeInstallationDirectory": true,
    "deleteAppDataOnUninstall": false
  },
  "linux": {
    "target": [
      "AppImage"
    ],
    "icon": "app-icon.ico",
    "artifactName": "${productName}-Linux-${version}.${ext}"
  }
}
